df <- read.csv(eeg_eye_r_dataset_path)
df <- na.omit(df)
# Set the response as option type
response <- df$option_type
df['output'] <- response
# Set the factors
# df$option <- as.factor(df$option)
# df$option_type <- as.factor(df$option_type)
# df$option <- as.numeric(df$option)
# Clear all
rm(list=ls())
library(yaml)
library(ggplot2)
library(feather)
library(lme4)
library(simr)
library(here)
library(sjPlot)
library(writexl)
library(ggpubr)
library(sjmisc)
# Read the configuration file
config <- yaml.load_file("../../config.yml")
eeg_eye_r_dataset_path <- here(config$eeg_eye_r_dataset_path)
df <- read.csv(eeg_eye_r_dataset_path)
df <- na.omit(df)
# Set the response as option type
response <- df$option_type
df['output'] <- response
# Set the factors
# df$option <- as.factor(df$option)
# df$option_type <- as.factor(df$option_type)
# df$option <- as.numeric(df$option)
# Clear all
rm(list=ls())
library(yaml)
library(ggplot2)
library(feather)
library(lme4)
library(simr)
library(here)
library(sjPlot)
library(writexl)
library(ggpubr)
library(sjmisc)
# Read the configuration file
config <- yaml.load_file("../../config.yml")
eeg_eye_r_dataset_path <- here(config$eeg_eye_r_dataset_path)
df <- read.csv(eeg_eye_r_dataset_path)
df <- na.omit(df)
# Set the response as option type
response <- df$option_type
df['output'] <- response
# Set the factors
# df$option <- as.factor(df$option)
# df$option_type <- as.factor(df$option_type)
# df$option <- as.numeric(df$option)
# Clear all
rm(list=ls())
library(yaml)
library(ggplot2)
library(feather)
library(lme4)
library(simr)
library(here)
library(sjPlot)
library(writexl)
library(ggpubr)
library(sjmisc)
# Read the configuration file
config <- yaml.load_file("../../config.yml")
eeg_eye_r_dataset_path <- here(config$eeg_eye_r_dataset_path)
df <- read.csv(eeg_eye_r_dataset_path)
df <- na.omit(df)
# Set the response as option type
response <- df$option
df['output'] <- response
# Set the factors
# df$option <- as.factor(df$option)
# df$option_type <- as.factor(df$option_type)
# df$option <- as.numeric(df$option)
# Clear all
rm(list=ls())
library(yaml)
library(ggplot2)
library(feather)
library(lme4)
library(simr)
library(here)
library(sjPlot)
library(writexl)
library(ggpubr)
library(sjmisc)
# Read the configuration file
config <- yaml.load_file("../../config.yml")
eeg_eye_r_dataset_path <- here(config$eeg_eye_r_dataset_path)
df <- read.csv(eeg_eye_r_dataset_path)
df <- na.omit(df)
# Set the response as option type
response <- df$option
df['output'] <- response
# Set the factors
# df$option <- as.factor(df$option)
# df$option_type <- as.factor(df$option_type)
# df$option <- as.numeric(df$option)
# Clear all
rm(list=ls())
library(yaml)
library(ggplot2)
library(feather)
library(lme4)
library(simr)
library(here)
library(sjPlot)
library(writexl)
library(ggpubr)
library(sjmisc)
# Read the configuration file
config <- yaml.load_file("../../config.yml")
eeg_eye_r_dataset_path <- here(config$eeg_eye_r_dataset_path)
df <- read.csv(eeg_eye_r_dataset_path)
df <- na.omit(df)
# Set the response as option type
# response <- df$option
# df['output'] <- response
# Set the factors
# df$option <- as.factor(df$option)
# df$option_type <- as.factor(df$option_type)
# df$option <- as.numeric(df$option)
# Clear all
rm(list=ls())
library(yaml)
library(ggplot2)
library(feather)
library(lme4)
library(simr)
library(here)
library(sjPlot)
library(writexl)
library(ggpubr)
library(sjmisc)
# Read the configuration file
config <- yaml.load_file("../../config.yml")
eeg_eye_r_dataset_path <- here(config$eeg_eye_r_dataset_path)
df <- read.csv(eeg_eye_r_dataset_path)
df <- na.omit(df)
# Set the response as option type
# response <- df$option
# df['output'] <- response
# Set the factors
# df$option <- as.factor(df$option)
# df$option_type <- as.factor(df$option_type)
# df$option <- as.numeric(df$option)
# Select only target and attack option
df_static <- subset(df, df$complexity_type=='S002')
response <-  df_static$option
response[response=='caution_option'] <- 3
response[response=='engage_option'] <- 2
response[response=='target_option'] <- 1
response
# response <- as.numeric(as.character(response))
# Fit the mixed effect model
model <- glmer(response ~ n_saccades*n_fixations*prob_high_eng + (1 |subject),
data = df_static, family = gaussian(link = log))
# Select only target and attack option
df_static <- subset(df, df$complexity_type=='S002')
response <-  as.numeric(df_static$option)
response[response=='caution_option'] <- 3
response[response=='engage_option'] <- 2
response[response=='target_option'] <- 1
response
# response <- as.numeric(as.character(response))
# Fit the mixed effect model
model <- glmer(response ~ n_saccades*n_fixations*prob_high_eng + (1 |subject),
data = df_static, family = gaussian(link = log))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_engage$subject)
# Select only target and attack option
df_static <- subset(df, df$complexity_type=='S002')
response <-  as.numeric(df_static$option)
response[response=='caution_option'] <- 3
response[response=='engage_option'] <- 2
response[response=='target_option'] <- 1
response
# response <- as.numeric(as.character(response))
# Fit the mixed effect model
model <- glmer(response ~ n_saccades*n_fixations*prob_high_eng + (1 |subject),
data = df_static, family = gaussian(link = log))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_engage$subject)
# Select only target and attack option
df_static <- subset(df, df$complexity_type=='S002')
response <-  as.numeric(df_static$option)
response[response=='caution_option'] <- 3
response[response=='engage_option'] <- 2
response[response=='target_option'] <- 1
response
# response <- as.numeric(as.character(response))
# Fit the mixed effect model
model <- glmer(response ~ n_saccades*n_fixations*prob_high_eng + (1 |subject),
data = df_static, family = gaussian(link = identity()))
# Select only target and attack option
df_static <- subset(df, df$complexity_type=='S002')
response <-  as.numeric(df_static$option)
response[response=='caution_option'] <- 3
response[response=='engage_option'] <- 2
response[response=='target_option'] <- 1
response
# response <- as.numeric(as.character(response))
# Fit the mixed effect model
model <- glmer(response ~ n_saccades*n_fixations*prob_high_eng + (1 |subject),
data = df_static, family = gaussian(link = identity))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_engage$subject)
# Select only target and attack option
df_static <- subset(df, df$complexity_type=='S002')
response <-  as.numeric(df_static$option)
response[response=='caution_option'] <- 3
response[response=='engage_option'] <- 2
response[response=='target_option'] <- 1
response
# response <- as.numeric(as.character(response))
# Fit the mixed effect model
model <- glmer(response ~ n_saccades*n_fixations*prob_high_eng + (1 |subject),
data = df_static, family = gaussian(link = identity))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_static$subject)
test <- c()
for (subject in subjects){
id <- df_engage$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
# Select only target and attack option
df_static <- subset(df, df$complexity_type=='S002')
response <-  as.numeric(df_static$option)
response[response=='caution_option'] <- 3
response[response=='engage_option'] <- 2
response[response=='target_option'] <- 1
response
# response <- as.numeric(as.character(response))
# Fit the mixed effect model
model <- glmer(response ~ n_saccades*n_fixations*prob_high_eng + (1 |subject),
data = df_static, family = gaussian(link = identity))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_static$subject)
test <- c()
for (subject in subjects){
id <- df_static$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
test
mean(na.omit(test))
# Select only target and attack option
df_static <- subset(df, df$complexity_type=='S002')
response <-  as.numeric(df_static$option)
response[response=='caution_option'] <- 5
response[response=='engage_option'] <- 2
response[response=='target_option'] <- 1
response
# response <- as.numeric(as.character(response))
# Fit the mixed effect model
model <- glmer(response ~ n_saccades*n_fixations*prob_high_eng + (1 |subject),
data = df_static, family = gaussian(link = identity))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_static$subject)
test <- c()
for (subject in subjects){
id <- df_static$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
test
mean(na.omit(test))
# Select only target and attack option
df_static <- subset(df, df$complexity_type=='S002')
response <-  as.numeric(df_static$option)
response[response=='caution_option'] <- 6
response[response=='engage_option'] <- 2
response[response=='target_option'] <- 1
response
# response <- as.numeric(as.character(response))
# Fit the mixed effect model
model <- glmer(response ~ n_saccades*n_fixations*prob_high_eng + (1 |subject),
data = df_static, family = gaussian(link = identity))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_static$subject)
test <- c()
for (subject in subjects){
id <- df_static$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
test
mean(na.omit(test))
# Select only target and attack option
df_static <- subset(df, df$complexity_type=='S002')
response <-  as.numeric(df_static$option)
response[response=='caution_option'] <- 6
response[response=='engage_option'] <- 3
response[response=='target_option'] <- 1
response
# response <- as.numeric(as.character(response))
# Fit the mixed effect model
model <- glmer(response ~ n_saccades*n_fixations*prob_high_eng + (1 |subject),
data = df_static, family = gaussian(link = identity))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_static$subject)
test <- c()
for (subject in subjects){
id <- df_static$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
test
mean(na.omit(test))
# Select only target and attack option
df_static <- subset(df, df$complexity_type=='S002')
response <-  as.numeric(df_static$option)
response[response=='caution_option'] <- 6
response[response=='engage_option'] <- 3
response[response=='target_option'] <- 1
response
# response <- as.numeric(as.character(response))
# Fit the mixed effect model
model <- glmer(response ~ n_saccades*n_fixations*prob_high_eng + (1 |subject),
data = df_static, family = gaussian(link = identity))
summary(model)
tab_model(model)
# Correlation analysis
resp <- identity(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_static$subject)
test <- c()
for (subject in subjects){
id <- df_static$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
test
mean(na.omit(test))
# Select only target and attack option
df_static <- subset(df, df$complexity_type=='S002')
response <-  as.numeric(df_static$option)
response[response=='caution_option'] <- 6
response[response=='engage_option'] <- 3
response[response=='target_option'] <- 1
response
# response <- as.numeric(as.character(response))
# Fit the mixed effect model
model <- glmer(response ~ n_saccades*n_fixations*prob_high_eng + (1 |subject),
data = df_static, family = gaussian(link = identity))
summary(model)
tab_model(model)
# Select only target and attack option
df_static <- subset(df, df$complexity_type=='S002')
response <-  as.numeric(df_static$option)
response[response=='caution_option'] <- 1
response[response=='engage_option'] <- 0
response[response=='target_option'] <- -1
response
# response <- as.numeric(as.character(response))
# Fit the mixed effect model
model <- glmer(response ~ n_saccades*n_fixations*prob_high_eng + (1 |subject),
data = df_static, family = gaussian(link = identity))
summary(model)
tab_model(model)
# Select only target and attack option
df_static <- subset(df, df$complexity_type=='S002')
response <-  as.numeric(df_static$option)
response[response=='caution_option'] <- 1
response[response=='engage_option'] <- 0
response[response=='target_option'] <- -1
response
# response <- as.numeric(as.character(response))
# Fit the mixed effect model
model <- glmer(response ~ prob_high_eng + (1 |subject),
data = df_static, family = gaussian(link = identity))
summary(model)
tab_model(model)
# Select only target and attack option
df_static <- subset(df, df$complexity_type=='S002')
response <-  as.numeric(df_static$option)
response[response=='caution_option'] <- 1
response[response=='engage_option'] <- 0
response[response=='target_option'] <- -1
response
# response <- as.numeric(as.character(response))
# Fit the mixed effect model
model <- glmer(response ~ prob_high_eng + (1 |subject),
data = df_static, family = gaussian(link = identity))
summary(model)
tab_model(model)
# Select only target and attack option
df_static <- subset(df, df$complexity_type=='S002')
response <-  as.numeric(df_static$option)
response[response=='caution_option'] <- 2
response[response=='engage_option'] <- 1
response[response=='target_option'] <- 0
response
# response <- as.numeric(as.character(response))
# Fit the mixed effect model
model <- glmer(response ~ prob_high_eng + (1 |subject),
data = df_static, family = gaussian(link = identity))
summary(model)
tab_model(model)
# Select only target and attack option
df_static <- subset(df, df$complexity_type=='S002')
response <-  as.numeric(df_static$option)
response[response=='caution_option'] <- 1
response[response=='engage_option'] <- 0
response[response=='target_option'] <- -1
response
# response <- as.numeric(as.character(response))
# Fit the mixed effect model
model <- glmer(response ~ prob_high_eng + (1 |subject),
data = df_static, family = gaussian(link = identity))
summary(model)
tab_model(model)
View(df_static)
# Select only target and attack option
df_static <- subset(df, df$complexity_type=='S002')
response <-  as.numeric(df_static$option)
response[response=='caution_option'] <- 1
response[response=='engage_option'] <- 0
response[response=='target_option'] <- -1
response
# response <- as.numeric(as.character(response))
# Fit the mixed effect model
model <- glmer(response ~ prob_ave_workload*prob_high_eng + (1 |subject),
data = df_static, family = gaussian(link = identity))
summary(model)
tab_model(model)
# Select only target and attack option
df_static <- subset(df, df$complexity_type=='S002')
response <-  as.numeric(df_static$option)
response[response=='caution_option'] <- 1
response[response=='engage_option'] <- 0
response[response=='target_option'] <- -1
response
# response <- as.numeric(as.character(response))
# Fit the mixed effect model
model <- glmer(response ~ prob_high_eng + (1 |subject),
data = df_static, family = gaussian(link = identity))
summary(model)
tab_model(model)
# Select only target and attack option
df_static <- subset(df, df$complexity_type=='S002')
response <-  as.numeric(df_static$option)
response[response=='caution_option'] <- 1
response[response=='engage_option'] <- 0
response[response=='target_option'] <- -1
response
# response <- as.numeric(as.character(response))
# Fit the mixed effect model
model <- glmer(response ~ log(prob_high_eng) + (1 |subject),
data = df_static, family = gaussian(link = identity))
summary(model)
tab_model(model)
# Select only target and attack option
df_static <- subset(df, df$complexity_type=='S002')
response <-  as.numeric(df_static$option)
response[response=='caution_option'] <- 1
response[response=='engage_option'] <- 0
response[response=='target_option'] <- -1
response
# response <- as.numeric(as.character(response))
# Fit the mixed effect model
model <- glmer(response ~ prob_high_eng + (1 |subject),
data = df_static, family = gaussian(link = identity))
summary(model)
tab_model(model)
# Select only target and attack option
df_static <- subset(df, df$complexity_type=='S002')
response <-  as.numeric(df_static$option)
response[response=='caution_option'] <- 1
response[response=='engage_option'] <- 0
response[response=='target_option'] <- -1
response
# response <- as.numeric(as.character(response))
# Fit the mixed effect model
model <- glmer(response ~ prob_high_eng*prob_ave_workload + (1 |subject),
data = df_static, family = gaussian(link = identity))
summary(model)
tab_model(model)
