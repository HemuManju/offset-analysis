model <- glmer(response ~ prob_ave_workload*pupil_size +  (1 | subject),
data = df_engage, family = gaussian(link = log))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_engage$subject)
test <- c()
for (subject in subjects){
id <- df_engage$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
# test
mean(na.omit(test))
# Select only target and attack option
df_pre_option <- subset(df, df$option_type=='pre_option')
df_static <- subset(df_pre_option, df$complexity_type=='S002')
# df_engage <-  subset(df_static, df_static$option_type=='caution_option' | df_static$option_type == 'target_option')
df_engage <- df_static
df_engage <- na.omit(df_engage)
# df_engage$option_type <- relevel(df_engage$option_type, "target_option")
response <-  df_engage$option
# Fit the mixed effect model
model <- glmer(response ~ prob_ave_workload*prob_high_eng +  (1 | subject),
data = df_engage, family = gaussian(link = log))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_engage$subject)
test <- c()
for (subject in subjects){
id <- df_engage$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
# test
mean(na.omit(test))
# Select only target and attack option
df_pre_option <- subset(df, df$option_type=='pre_option')
df_static <- subset(df_pre_option, df$complexity_type=='S002')
# df_engage <-  subset(df_static, df_static$option_type=='caution_option' | df_static$option_type == 'target_option')
df_engage <- df_static
df_engage <- na.omit(df_engage)
# df_engage$option_type <- relevel(df_engage$option_type, "target_option")
response <-  df_engage$option
# Fit the mixed effect model
model <- glmer(response ~ prob_ave_workload*prob_high_eng +  (1 | subject),
data = df_engage, family = gaussian(link = log))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_engage$subject)
test <- c()
for (subject in subjects){
id <- df_engage$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
# test
mean(na.omit(test))
# Select only target and attack option
df_pre_option <- subset(df, df$option_type=='pre_option')
df_static <- subset(df_pre_option, df$complexity_type=='S002')
# df_engage <-  subset(df_static, df_static$option_type=='caution_option' | df_static$option_type == 'target_option')
df_engage <- df_static
df_engage <- na.omit(df_engage)
# df_engage$option_type <- relevel(df_engage$option_type, "target_option")
response <-  df_engage$option
# Fit the mixed effect model
model <- glmer(response ~ prob_ave_workload*prob_high_eng +  (1 | subject),
data = df_engage, family = gaussian(link = log))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_engage$subject)
test <- c()
for (subject in subjects){
id <- df_engage$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
# test
mean(na.omit(test))
# Select only target and attack option
df_pre_option <- subset(df, df$option_type=='pre_option')
df_static <- subset(df_pre_option, df$complexity_type=='S002')
# df_engage <-  subset(df_static, df_static$option_type=='caution_option' | df_static$option_type == 'target_option')
df_engage <- df_static
df_engage <- na.omit(df_engage)
# df_engage$option_type <- relevel(df_engage$option_type, "target_option")
response <-  df_engage$option
# Fit the mixed effect model
model <- glmer(response ~ prob_ave_workload*prob_high_eng,
data = df_engage, family = gaussian(link = log))
# Select only target and attack option
df_pre_option <- subset(df, df$option_type=='pre_option')
df_static <- subset(df_pre_option, df$complexity_type=='S002')
# df_engage <-  subset(df_static, df_static$option_type=='caution_option' | df_static$option_type == 'target_option')
df_engage <- df_static
df_engage <- na.omit(df_engage)
# df_engage$option_type <- relevel(df_engage$option_type, "target_option")
response <-  df_engage$option
# Fit the mixed effect model
model <- glmer(response ~ prob_ave_workload*prob_high_eng +  (1 | subject),
data = df_engage, family = gaussian(link = log))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_engage$subject)
test <- c()
for (subject in subjects){
id <- df_engage$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
# test
mean(na.omit(test))
# Select only target and attack option
df_pre_option <- subset(df, df$option_type=='pre_option')
df_static <- subset(df_pre_option, df$complexity_type=='S002')
# df_engage <-  subset(df_static, df_static$option_type=='caution_option' | df_static$option_type == 'target_option')
df_engage <- df_static
df_engage <- na.omit(df_engage)
# df_engage$option_type <- relevel(df_engage$option_type, "target_option")
response <-  df_engage$prob_high_eng
# Fit the mixed effect model
model <- glmer(response ~ prob_ave_workload*prob_high_eng +  (1 | subject),
data = df_engage, family = gaussian(link = log))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_engage$subject)
test <- c()
for (subject in subjects){
id <- df_engage$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
# test
mean(na.omit(test))
# Select only target and attack option
df_pre_option <- subset(df, df$option_type=='pre_option')
df_static <- subset(df_pre_option, df$complexity_type=='S002')
# df_engage <-  subset(df_static, df_static$option_type=='caution_option' | df_static$option_type == 'target_option')
df_engage <- df_static
df_engage <- na.omit(df_engage)
# df_engage$option_type <- relevel(df_engage$option_type, "target_option")
response <-  df_engage$prob_high_eng
# Fit the mixed effect model
model <- glmer(response ~ option +  (1 | subject),
data = df_engage, family = gaussian(link = log))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_engage$subject)
test <- c()
for (subject in subjects){
id <- df_engage$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
# test
mean(na.omit(test))
# Select only target and attack option
df_pre_option <- subset(df, df$option_type=='pre_option')
df_static <- subset(df_pre_option, df$complexity_type=='S002')
# df_engage <-  subset(df_static, df_static$option_type=='caution_option' | df_static$option_type == 'target_option')
df_engage <- df_static
df_engage <- na.omit(df_engage)
# df_engage$option_type <- relevel(df_engage$option_type, "target_option")
response <-  df_engage$prob_high_eng
# Fit the mixed effect model
model <- glmer(response ~ option +  (1 | subject),
data = df_engage, family = gaussian(link = log))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_engage$subject)
test <- c()
for (subject in subjects){
id <- df_engage$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
# test
mean(na.omit(test))
# Clear all
rm(list=ls())
library(yaml)
library(ggplot2)
library(feather)
library(lme4)
library(simr)
library(here)
library(sjPlot)
library(writexl)
library(ggpubr)
library(sjmisc)
# Read the configuration file
config <- yaml.load_file("../../config.yml")
eeg_eye_r_dataset_path <- here(config$eeg_eye_r_dataset_path)
df <- read.csv(eeg_eye_r_dataset_path)
df <- na.omit(df)
# Set the response as option type
response <- df$option_type
df['output'] <- response
# Set the factors
df$option <- as.factor(df$option)
df$option_type <- as.factor(df$option_type)
df$option <- as.numeric(df$option)
# Select only target and attack option
df_pre_option <- subset(df, df$option_type=='pre_option')
df_static <- subset(df_pre_option, df$complexity_type=='S002')
# df_engage <-  subset(df_static, df_static$option_type=='caution_option' | df_static$option_type == 'target_option')
df_engage <- df_static
df_engage <- na.omit(df_engage)
# df_engage$option_type <- relevel(df_engage$option_type, "target_option")
response <-  df_engage$prob_high_eng
# Fit the mixed effect model
model <- glmer(response ~ option +  (1 | subject),
data = df_engage, family = gaussian(link = log))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_engage$subject)
test <- c()
for (subject in subjects){
id <- df_engage$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
# test
mean(na.omit(test))
# Select only target and attack option
df_pre_option <- subset(df, df$option_type=='pre_option')
df_static <- subset(df_pre_option, df$complexity_type=='S002')
# df_engage <-  subset(df_static, df_static$option_type=='caution_option' | df_static$option_type == 'target_option')
df_engage <- df_static
df_engage <- na.omit(df_engage)
# df_engage$option_type <- relevel(df_engage$option_type, "target_option")
response <-  df_engage$prob_high_eng
# Fit the mixed effect model
model <- glmer(response ~ option_type +  (1 | subject),
data = df_engage, family = gaussian(link = log))
# Clear all
rm(list=ls())
library(yaml)
library(ggplot2)
library(feather)
library(lme4)
library(simr)
library(here)
library(sjPlot)
library(writexl)
library(ggpubr)
library(sjmisc)
# Read the configuration file
config <- yaml.load_file("../../config.yml")
eeg_eye_r_dataset_path <- here(config$eeg_eye_r_dataset_path)
df <- read.csv(eeg_eye_r_dataset_path)
df <- na.omit(df)
# Set the response as option type
response <- df$option_type
df['output'] <- response
# Set the factors
df$option <- as.factor(df$option)
df$option_type <- as.factor(df$option_type)
# df$option <- as.numeric(df$option)
# Select only target and attack option
df_pre_option <- subset(df, df$option_type=='pre_option')
df_static <- subset(df_pre_option, df$complexity_type=='S002')
# df_engage <-  subset(df_static, df_static$option_type=='caution_option' | df_static$option_type == 'target_option')
df_engage <- df_static
df_engage <- na.omit(df_engage)
# df_engage$option_type <- relevel(df_engage$option_type, "target_option")
response <-  df_engage$prob_high_eng
# Fit the mixed effect model
model <- glmer(response ~ option_type +  (1 | subject),
data = df_engage, family = gaussian(link = log))
# Select only target and attack option
df_pre_option <- subset(df, df$option_type=='pre_option')
df_static <- subset(df_pre_option, df$complexity_type=='S002')
# df_engage <-  subset(df_static, df_static$option_type=='caution_option' | df_static$option_type == 'target_option')
df_engage <- df_static
df_engage <- na.omit(df_engage)
# df_engage$option_type <- relevel(df_engage$option_type, "target_option")
response <-  df_engage$prob_high_eng
# Fit the mixed effect model
model <- glmer(response ~ option +  (1 | subject),
data = df_engage, family = gaussian(link = log))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_engage$subject)
test <- c()
for (subject in subjects){
id <- df_engage$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
# test
mean(na.omit(test))
# Select only target and attack option
df_pre_option <- subset(df, df$option_type=='pre_option')
df_static <- subset(df_pre_option, df$complexity_type=='S002')
# df_engage <-  subset(df_static, df_static$option_type=='caution_option' | df_static$option_type == 'target_option')
df_engage <- df_static
df_engage <- na.omit(df_engage)
# df_engage$option_type <- relevel(df_engage$option_type, "target_option")
response <-  df_engage$prob_high_eng
# Fit the mixed effect model
model <- glmer(response ~ option +  (1 | subject),
data = df_engage, family = gaussian(link = log))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_engage$subject)
test <- c()
for (subject in subjects){
id <- df_engage$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
# test
mean(na.omit(test))
# Select only target and attack option
df_pre_option <- subset(df, df$option_type=='pre_option')
df_static <- subset(df_pre_option, df$complexity_type=='S002')
# df_engage <-  subset(df_static, df_static$option_type=='caution_option' | df_static$option_type == 'target_option')
df_engage <- df_static
df_engage <- na.omit(df_engage)
# df_engage$option_type <- relevel(df_engage$option_type, "target_option")
response <-  df_engage$prob_high_eng
# Fit the mixed effect model
model <- glmer(response ~ option +  (1 | subject),
data = df_engage, family = gaussian(link = log))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_engage$subject)
test <- c()
for (subject in subjects){
id <- df_engage$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
# test
mean(na.omit(test))
# Select only target and attack option
df_pre_option <- subset(df, df$option_type=='pre_option')
df_static <- subset(df_pre_option, df$complexity_type=='S002')
# df_engage <-  subset(df_static, df_static$option_type=='caution_option' | df_static$option_type == 'target_option')
df_engage <- df_static
df_engage <- na.omit(df_engage)
# df_engage$option_type <- relevel(df_engage$option_type, "target_option")
response <-  df_engage$prob_high_eng
# Fit the mixed effect model
model <- glmer(response ~ option +  (1 | subject),
data = df_engage, family = gaussian(link = log))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_engage$subject)
test <- c()
for (subject in subjects){
id <- df_engage$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
# test
mean(na.omit(test))
# Select only target and attack option
df_pre_option <- subset(df, df$option_type=='pre_option')
df_static <- subset(df_pre_option, df$complexity_type=='S002')
# df_engage <-  subset(df_static, df_static$option_type=='caution_option' | df_static$option_type == 'target_option')
df_engage <- df_static
df_engage <- na.omit(df_engage)
df_engage$option_type <- relevel(df_engage$option_type, "target_option")
View(df_engage)
# Select only target and attack option
df_pre_option <- subset(df, df$option_type=='pre_option')
df_static <- subset(df_pre_option, df$complexity_type=='S002')
# df_engage <-  subset(df_static, df_static$option_type=='caution_option' | df_static$option_type == 'target_option')
df_engage <- df_static
df_engage <- na.omit(df_engage)
df_engage$option <- relevel(df_engage$option, "target_option")
response <-  df_engage$prob_high_eng
# Fit the mixed effect model
model <- glmer(response ~ option +  (1 | subject),
data = df_engage, family = gaussian(link = log))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_engage$subject)
test <- c()
for (subject in subjects){
id <- df_engage$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
# test
mean(na.omit(test))
# Select only target and attack option
df_pre_option <- subset(df, df$option_type=='pre_option')
df_static <- subset(df_pre_option, df$complexity_type=='S002')
# df_engage <-  subset(df_static, df_static$option_type=='caution_option' | df_static$option_type == 'target_option')
df_engage <- df_static
df_engage <- na.omit(df_engage)
df_engage$option <- relevel(df_engage$option, "target_option")
response <-  df_engage$prob_high_eng
# Fit the mixed effect model
model <- glmer(response ~ option +  (1 | subject),
data = df_engage, family = gaussian(link = log))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_engage$subject)
test <- c()
for (subject in subjects){
id <- df_engage$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
# test
mean(na.omit(test))
# Select only target and attack option
df_pre_option <- subset(df, df$option_type=='pre_option')
df_static <- subset(df_pre_option, df$complexity_type=='S002')
# df_engage <-  subset(df_static, df_static$option_type=='caution_option' | df_static$option_type == 'target_option')
df_engage <- df_static
df_engage <- na.omit(df_engage)
df_engage$option <- relevel(df_engage$option, "target_option")
response <-  df_engage$prob_ave_workload
# Fit the mixed effect model
model <- glmer(response ~ option +  (1 | subject),
data = df_engage, family = gaussian(link = log))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_engage$subject)
test <- c()
for (subject in subjects){
id <- df_engage$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
# test
mean(na.omit(test))
# Select only target and attack option
df_pre_option <- subset(df, df$option_type=='pre_option')
df_static <- subset(df_pre_option, df$complexity_type=='S002')
# df_engage <-  subset(df_static, df_static$option_type=='caution_option' | df_static$option_type == 'target_option')
df_engage <- df_static
df_engage <- na.omit(df_engage)
df_engage$option <- relevel(df_engage$option, "target_option")
response <-  df_engage$prob_ave_workload
# Fit the mixed effect model
model <- glmer(response ~ option +  (1 | subject),
data = df_engage, family = gaussian(link = log))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_engage$subject)
test <- c()
for (subject in subjects){
id <- df_engage$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
# test
mean(na.omit(test))
# Select only target and attack option
df_pre_option <- subset(df, df$option_type=='pre_option')
df_static <- subset(df_pre_option, df$complexity_type=='S002')
# df_engage <-  subset(df_static, df_static$option_type=='caution_option' | df_static$option_type == 'target_option')
df_engage <- df_static
df_engage <- na.omit(df_engage)
df_engage$option <- relevel(df_engage$option, "target_option")
response <-  df_engage$pupil_size
# Fit the mixed effect model
model <- glmer(response ~ option +  (1 | subject),
data = df_engage, family = gaussian(link = log))
summary(model)
tab_model(model)
# Correlation analysis
resp <- log(response)
weighted_res <- model@resp$wtres
subjects <- unique(df_engage$subject)
test <- c()
for (subject in subjects){
id <- df_engage$subject == subject
test[subject] <- cor(resp[id], weighted_res[id], method = c("pearson"))
}
# test
mean(na.omit(test))
